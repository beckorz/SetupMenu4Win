<!--
_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/

   htaの起動前スクリプト

   - 64bitOS環境で、htaの関連付け実行が32bit起動なので、64bitなネイティブ環境で起動し直す
     (SysWoW64ではなく、system32指定)
   - UAC環境で、昇格できるようにRunAsで管理者権限で起動し直す

_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
-->
<job>
<script language="javascript">
// Detect UAC
var oLocator = new ActiveXObject("WbemScripting.SWbemLocator");
var oService = oLocator.ConnectServer(".", "root\\default");
var oRegProv = oService.Get("StdRegProv");
var method = oRegProv.Methods_.Item("GetDWORDValue");
var inParam = method.InParameters.SpawnInstance_();
inParam.hDefKey = 0x80000002;       // HKLM
inParam.sSubKeyName = "SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\policies\\system";
inParam.sValueName = "EnableLUA";
var outParam = oRegProv.ExecMethod_(method.Name, inParam);
var hasUac = (outParam.uValue !== null);

// Shell execute by RunAs
var fs = new ActiveXObject("Scripting.FileSystemObject");
var w = new ActiveXObject("Wscript.Shell");
var app = new ActiveXObject('Shell.Application');
var cur = fs.GetParentFolderName(WScript.ScriptFullName);
if (hasUac) {
    app.ShellExecute(w.ExpandEnvironmentStrings("%windir%\\system32\\mshta.exe"), "\"" + cur + "\\" + WScript.ScriptName.replace("wsf", "hta") + "\" \"" + cur + "\"","","runas",1)
} else {
    app.ShellExecute(w.ExpandEnvironmentStrings("%windir%\\system32\\mshta.exe"), "\"" + cur + "\\" + WScript.ScriptName.replace("wsf", "hta") + "\" \"" + cur + "\"")
}
</script>
</job> 
