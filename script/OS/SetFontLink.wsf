<?xml version="1.0" encoding="utf-8" ?>
<job>
<script language="javascript" src="..\..\_lib\registry.js"/>
<script language="javascript" src="..\..\_lib\util.js"/>
<script language="javascript">
<![CDATA[


if (!isElevated()) {
    // Elevated runas
    var w = new ActiveXObject("Wscript.Shell");
    var app = new ActiveXObject('Shell.Application');
    app.ShellExecute(WScript.FullName, '"{0}" "{1}"'.format(WScript.ScriptFullName, args[0]), "", "runas");
    WScript.Quit(); //  ' Ended current process
}

var shell = new ActiveXObject("Shell.Application");
var regExpObj = new ActiveXObject("VBScript.RegExp");
var fs = new ActiveXObject("Scripting.FileSystemObject");

function echo(str) { WScript.echo(str); }
function searchFiles(path, regExpPattern, func) {
    regExpObj.Pattern = regExpPattern;
    var files = fs.GetFolder(path).Files;
    var em = new Enumerator(files);
    for(em.moveFirst(); !em.atEnd(); em.moveNext()){
        // Return callback.
        if (regExpObj.Test(em.item().Name)) {
            func(em.item());
        }
    }
}

var reg = new Registry('.');

function setFontLink(fileName) {
    var ret = reg.SetMultiStringValue(reg.HKLM, "SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\FontLink\\SystemLink", "Consolas", (fileName + ',MeiryoKe_Console').split('#'));
    if (ret === 0) {
        echo('[Success] Registry set success.');
    } else {
        //
        echo("[Error] SystemLink failed. registry set error. Need run as administrator.");
    }
}

var fontsFolder = shell.Namespace(20);   // 20: fonts directory

var existsFonts = false;
var fontFiles = [];
searchFiles(fontsFolder.Self.Path, "[mM]eiryo[kK]e_.*\.ttc", function(x){ existsFonts = true; fontFiles.push(x); });
if (existsFonts) {
    for (var i = 0; i < fontFiles.length; i++) {
        setFontLink(fs.GetFileName(fontFiles[i]));
    }
} else {
    echo('Not found MeiryoKe font.\r\nPlease install MeiryoKe Font.');
}
]]>
</script>
</job>
